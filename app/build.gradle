apply plugin: 'com.android.application'

android {
    compileSdkVersion cfgs.compileSdkVersion

    defaultConfig {
        minSdkVersion cfgs.minSdkVersion
        targetSdkVersion cfgs.targetSdkVersion
        versionCode cfgs.versionCode
        versionName cfgs.versionName
        flavorDimensions "default"
    }
    signingConfigs {
        release {
            storeFile file("../app/kuaikuaikeystore.jks")
            storePassword '123456'
            keyAlias 'kuaikuai'
            keyPassword '123456'
        }
        debugConfig {
            storeFile file("../app/kuaikuaikeystore.jks")
            storePassword '123456'
            keyAlias 'kuaikuai'
            keyPassword '123456'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "debug", "false"
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "debug", "true"
        }
    }

    productFlavors {
        default_channel {}
        wandoujia {}
        yingyongbao {}
        huawei {}
        xiaomi {}
        vivo {}
        oppo {}
        baidu {}
        samsung {}
        _360 {}
        meizu {}
        anzhi {}
        jifeng {}
        sougou {}
        mumayi {}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (variant.buildType.name == "release") {
                fileName = "kuaikuai_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${variant.productFlavors[0].name}"

            } else {
                fileName = "kuaikuai_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}_beta"
            }
            outputFileName = fileName + ".apk"
        }
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd")
}

android {
    //use legacy for android 6.0
    useLibrary 'org.apache.http.legacy'
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    api project(':common')
}
